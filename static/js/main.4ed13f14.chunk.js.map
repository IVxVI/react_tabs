{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","tabs","selectedTabId","onTabSelected","selectedTab","find","tab","id","className","map","title","classNames","href","onClick","handleTab","content","App","useState","setSelectedTabId","foundTab","ReactDOM","render","document","getElementById"],"mappings":"kNASaA,EAAwB,SAAC,GAEhC,IADFC,EACC,EADDA,KAAMC,EACL,EADKA,cAAeC,EACpB,EADoBA,cAEjBC,EAAcH,EAAKI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAOL,MAAkBD,EAAK,GAOvE,OACE,sBAAK,UAAQ,gBAAb,UACE,qBAAKO,UAAU,gBAAf,SACE,6BACGP,EAAKQ,KAAI,SAAAH,GACR,IAAQC,EAAcD,EAAdC,GAAIG,EAAUJ,EAAVI,MAEZ,OACE,oBACEF,UACEG,IACE,CAAE,YAAaJ,IAAOH,EAAYG,KAGtC,UAAQ,MANV,SASE,mBACEK,KAAI,WAAML,GACV,UAAQ,UACRM,QAAS,kBA1BP,SAACP,GACbJ,IAAkBI,EAAIC,IACxBJ,EAAcG,GAwBaQ,CAAUR,IAH3B,SAKGI,KAPEH,UAef,qBAAKC,UAAU,QAAQ,UAAQ,aAA/B,SACGJ,EAAYW,cC3CRd,EAAO,CAClB,CAAEM,GAAI,QAASG,MAAO,QAASK,QAAS,eACxC,CAAER,GAAI,QAASG,MAAO,QAASK,QAAS,eACxC,CAAER,GAAI,QAASG,MAAO,QAASK,QAAS,gBAG7BC,EAAgB,WAC3B,MAA0CC,mBAAShB,EAAK,GAAGM,IAA3D,mBAAOL,EAAP,KAAsBgB,EAAtB,KACMC,EAAWlB,EAAKI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAOL,KAG7C,OACE,sBAAKM,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,mCACsBW,GAAYA,EAAST,SAG3C,cAAC,EAAD,CACET,KAAMA,EACNC,cAAeA,EACfC,cAXY,SAACG,GAAD,OAAcY,EAAiBZ,EAAIC,WCbvDa,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.4ed13f14.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport { Tab } from '../../types/tab';\n\ntype Props = {\n  tabs: Tab[],\n  selectedTabId: string,\n  onTabSelected: (tab: Tab) => void,\n};\n\nexport const Tabs: React.FC<Props> = (\n  { tabs, selectedTabId, onTabSelected },\n) => {\n  const selectedTab = tabs.find(tab => tab.id === selectedTabId) || tabs[0];\n  const handleTab = (tab: Tab) => {\n    if (selectedTabId !== tab.id) {\n      onTabSelected(tab);\n    }\n  };\n\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map(tab => {\n            const { id, title } = tab;\n\n            return (\n              <li\n                className={\n                  classNames(\n                    { 'is-active': id === selectedTab.id },\n                  )\n                }\n                data-cy=\"Tab\"\n                key={id}\n              >\n                <a\n                  href={`#${id}`}\n                  data-cy=\"TabLink\"\n                  onClick={() => handleTab(tab)}\n                >\n                  {title}\n                </a>\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {selectedTab.content}\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Tabs } from './components/Tabs';\nimport { Tab } from './types/tab';\n\nexport const tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: React.FC = () => {\n  const [selectedTabId, setSelectedTabId] = useState(tabs[0].id);\n  const foundTab = tabs.find(tab => tab.id === selectedTabId);\n  const handleTab = (tab: Tab) => setSelectedTabId(tab.id);\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        {`Selected tab is ${foundTab && foundTab.title}`}\n      </h1>\n\n      <Tabs\n        tabs={tabs}\n        selectedTabId={selectedTabId}\n        onTabSelected={handleTab}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}